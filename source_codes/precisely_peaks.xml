<tool id="Precisely" name="Precisely localize CMRs from peaks"  version='18.09'>
  <description></description>
  <command><![CDATA[
	Rscript $__tool_directory__/sample_sequence.R 
	$Peak
	$GTF 
	$Refgenome 
	$motif ;
 
	Rscript $__tool_directory__/seq_convert.R  'pos_bag.seq' 'pos_bag.seq' ;
	Rscript $__tool_directory__/seq_convert.R  'neg.seq' 'neg.seq' ;

	python $__tool_directory__/m6A_model_training.py 'pos_bag.seq' 'neg.seq' $method.type $model_file $scale_file $score_file $reserved_file;

  ]]></command>
  <inputs>
	<param name="Peak" type="data" format="encodepeak,bed" label="Peak region" />
	<param name="Refgenome" type="data" format="fa,fasta,fas" label="Reference genome" />
	<param name="GTF" type="data" format="gtf,gff2" label="Reference annotation file (GTF)" />
	<param name="motif" type="text" value="RRACH" label="Motif sequence" help="eg : RRACH "/>
	<conditional name="method">
		<param name="type" type="select" label="Methods" >
			<option value="0">miSVM</option>
			<option value="1">MISVM</option>
		</param>
	</conditional>
  </inputs>
  <stdio>
	<exit_code range="1:"  level="fatal" description="Error Running combine collection to a file" />
  </stdio>
  <outputs> 
	<data name="model_file" format="data" label="${tool.name} on ${on_string}: Model.data">
	</data>
	<data name="scale_file" format="data" label="${tool.name} on ${on_string}: Normalized_parameter.data">
	</data>
	<data name="score_file" format="tsv" label="${tool.name} on ${on_string}: Prediction score.txt">
	</data>
	<data name="reserved_file" format="tsv" label="${tool.name} on ${on_string}: Reserved samples.txt">
	</data>
  </outputs>
	<help>
.. class:: infomark

**What it does**

The widely used MeRIP-Seq experiments can only identify the enriched peak regions (100~200 nt) but without the precise CMR. To solve this problem, we implement two multiple instance learning algorithms (MIL) to precisely localize CMRs located in peaks. To be specific, each bag (positive or negative bag) was firstly converted into a fixed-column matrix with rows indicate the number of instances and columns indicate the number of features using three feature encoding schemes (**K-mer encoding**, **KSNPF encoding** and **Nucleic shift encoding**). Then two MIL-based approaches, miSVM and MISVM were implemented for model training. In the initialization process, instances in the positive bags were labeled as positives, and then in each iteration, the training set were relabeled and the iteration ends when there is no label change. The miSVM classifier tries to impute all negative labeled instances in positive bags as negative instances, and build a classifier based on these final labeled instances. The MISVM classifier tries to find the most reliable positive instance in each bag, and establish a classifier based on these positive instances only, while other instances in the positive bags are no longer used for training.

-------------

.. class:: infomark

**Inputs**

- **Peak region:** The positive bags in BED format generated by peak calling.

- **Reference genome:** The reference genome sequence in FASTA format.

- **Reference annotation file:** The reference annotation file in GFF3/GTF format.

-------------

.. class:: infomark

**Parameters**

- **Motif sequence:** A string, which specifies the motif.

- **Methods**

		- **miSVM:** The miSVM classifier tries to impute all negative labeled instances in positive bags as negative instances, and build a classifier based on these final labeled instances.

		- **MISVM:** The MISVM classifier tries to find the most reliable positive instance in each bag, and establish a classifier based on these positive instances only, while other instances in the positive bags are no longer used for training.

-------------

.. class:: infomark

**Outputs**

- **Model.data:** The trained MIL-based model.

- **Normalized_parameter.data:** The normalized parameters used in model training.

- **Prediction_score.txt:** The predictive probabilistic score for each instance in bags.

- **Reserved_samples.txt:** CMRs in single nucleotide resolution.


  </help>
</tool>


